package sky.pro.homework.javacore.hw24;

public class Main {

//    ### Задание 1
// Создайте список всех автомобилей, которые участвуют в автогонке. По нашей логике, в гонках участвуют объекты всех классов: «Легковые автомобили», «Грузовые автомобили» и «Автобусы».
//  У каждого автомобиля есть список спонсоров и водитель.
// Напомним, что водитель может управлять только одним автомобилем в гонках и больше никаким.
// Один спонсор может поддерживать несколько автомобилей. Спонсором может быть как компания, так и физическое лицо. В качестве параметров спонсор содержит имя (или название компании), а также сумму поддержки. У спонсоров есть метод «спонсировать заезд».
//  Кроме того, каждый автомобиль проходит техобслуживание, поэтому у него есть команда механиков.
// Создайте новый класс механик с параметрами:
//  - имя и фамилия;
//  - компания, в которой он работает;
//  - с какими автомобилями может работать (например, только с легковыми, грузовыми авто, автобусами или со всеми).
//
//    Методы:
//            - «провести техобслуживание»,
//            - «починить машину».
//
//    Количество механиков, которые могут работать над одной машиной, установите самостоятельно. Один механик может работать с несколькими машинами.
//    Напишите программу, с помощью которой можно узнать, как зовут водителя авто, какие спонсоры и механики у нее есть.
    public static void main(String[] args) {

        Bus bus = new Bus("Bus", "Super Bus", 5.0);
        Car car = new Car("Car", "Super Car", 2.0);
        Truck truck = new Truck("Truck", "Super Truck", 7.0);

        Driver<Car> driverB = new DriverB("ИИИ", true, 10);
        driverB.setTransport(car);
        driverB.startMoving();

        Driver<Truck> driverC = new DriverC("ППП", true, 20);
        driverC.setTransport(truck);
        driverC.startMoving();

        Driver<Bus> driverD = new DriverD("CCC", true, 20);
        driverD.setTransport(bus);
        driverD.startMoving();

        try {
            car.passDiagnostics();
            if (!car.isPassDiagnostics()){
                throw new RuntimeException("Автомобиль не прошёл диагностику!!!");
            }
            truck.passDiagnostics();
            if (!truck.isPassDiagnostics()){
                throw new RuntimeException("Грузовик не прошёл диагностику!!!");
            }
            bus.isPassDiagnostics();
        }catch (RuntimeException e){
            System.out.println("Ошибка: " + e);
        }


    }
}
