package sky.pro.homework.base.hw18;

public class Task5 {

    public static void main(String[] args) {

// ### Задание 5
// Напишите метод, который получает на вход массив и переставляет все его элементы в обратном порядке.
//  Подобное задание вы решали в домашнем задании по массивам.
        // - Текст прошлого задания
        //        Отойдем от подсчетов.
        //                В нашей бухгалтерской книге появился баг. Что-то пошло нет так, и Ф. И. О. сотрудников начали
        //                отображаться в обратную сторону. Т. е. вместо «Иванов Иван Иванович» мы имеем «чивонавИ навИ вонавИ».
        //        Данные с именами сотрудников хранятся в виде массива символов (char[]).
        //        Напишите код, который в случае такого бага будет выводить Ф. И. О. сотрудников в корректном виде.
        //        В качестве данных для массива используйте:
        //        char[] reverseFullName = { 'n', 'a', 'v', 'I', ' ', 'v', 'o', 'n', 'a', 'v', 'I'};
        //        В результате в консоль должно быть выведено "Ivanov Ivan".
        //        **Важно**: не используйте дополнительные массивы для решения этой задачи. Необходимо корректно пройти
        //        по массиву циклом и распечатать его элементы в правильном порядке.
// В метод приходит массив, допустим:
// {3, 2, 1, 6, 5}.
// Нужно без вспомогательного массива переместить элементы так, чтобы поданный массив стал: {5, 6, 1, 2, 3}.
// Рекомендуем написать этот метод без возвращаемого значения. Вы будете приятно удивлены, что даже если мы не вернем
// массив, первоначальный массив изменится, когда мы будем модернизировать пришедший в виде параметра массив внутри
// метода.
// Причину такого поведения ссылочных типов (объектов) вы узнаете на следующем уроке или на QA-вебинаре.

        int[] mass = {3, 2, 1, 6, 5};
        reverseIntMass(mass);
        for (int anInt : mass) {
            System.out.println(anInt);
        }
    }

    private static void reverseIntMass(int[] mass) {
        for (int i = 0; i < mass.length / 2; i++) {
            int j = mass[i];
            mass[i] = mass[mass.length - 1 - i];
            mass[mass.length - 1 - i] = j;
        }
    }
}
